import {default as CustomerSelector, SelectableCustomer} from "../../src/domain/customer-detail-section/CustomerSelector";

describe("CustomerSelector should", () => {

    let customers = [{ id: 'customerId' }];

    it("call back with the selected item", () => {
        let selectedCustomer;
        let customerSelector = CustomerSelector((customer) => { selectedCustomer = customer; });

        customerSelector.show(customers);
        customerSelector.selectWithoutTimeout(customers[0]);

        expect(selectedCustomer.id).toBe(customers[0].id);
    });

    it("not call back with the selected item when anyone is selected", () => {
        let selectedCustomer;
        let customerSelector = CustomerSelector((customer) => { selectedCustomer = customer; });

        customerSelector.show(customers);
        customerSelector.close();

        expect(selectedCustomer).toBe(undefined);
    });

    it("call back with the selected item when has mandatory selection", () => {
        let selectedCustomer;
        let customerSelector = CustomerSelector((customer) => { selectedCustomer = customer; });

        customerSelector.showWithMandatorySelection(customers);
        customerSelector.selectWithoutTimeout(customers[0]);
            
        expect(selectedCustomer.id).toBe(customers[0].id);
    });

    it("call back when no selected item",()=>{
        let called = false;
        let noSelectionAction = () => { called = true; };
        let customerSelector = CustomerSelector(() => { }, noSelectionAction);

        customerSelector.close();

        setTimeout(()=> expect(called).toBe(true), 500);         //Concensus
    });

});

describe("SelectableCustomer should", () => {

    let customer = { id: 'customerId' };

    it("call back with the customer", () => {
        let selectedCustomer;
        let selectableCustomer = SelectableCustomer(customer, (selected) => { selectedCustomer = selected; });

        selectableCustomer.select();

        expect(selectedCustomer.id).toBe(customer.id);
    });

});