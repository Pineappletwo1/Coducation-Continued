import TranslationService from "./translationService";
import Validator from "./validator";
import { DialogPublisher } from "./dialogPublisher";
import ErrorDialogPublisher from "./errorDialogPublisher";

export default function DependencyProvider() {
    let translatorInstance;
    let restClientInstance;
    let errorDialogPublisher;
    let baseUrlInstance;
    let apiBaseUrlInstance;
    let userEmail;

    function createTranslator(translations, cultureName) {
        translatorInstance = TranslationService(translations, cultureName);
    }

    function createErrorDialogPublisher(errorMessages) {
        errorDialogPublisher = ErrorDialogPublisher(getDialogPublisher(), errorMessages);
    }

    function getErrorDialogPublisher() {
        return errorDialogPublisher;
    }

    function setRestClient(restClient) {
        restClientInstance = restClient;
    }

    function getRestClient() {
        return restClientInstance;
    }

    function getTranslator() {
        return translatorInstance;
    }

    function getValidator() {
        return Validator(translatorInstance);
    }

    function getDialogPublisher() {
        return DialogPublisher;
    }

    function getBaseUrl() {
        return baseUrlInstance;
    }

    function setBaseUrl(baseUrl) {
        baseUrlInstance = baseUrl;
    }

    function getApiBaseUrl() {
        return apiBaseUrlInstance;
    }

    function setApiBaseUrl(apiBaseUrl) {
        apiBaseUrlInstance = apiBaseUrl;
    }

    function setUserEmail(newUserEmail) {
        userEmail = newUserEmail;
    }

    function getUserEmail() {
        return userEmail;
    }

    return {
        createTranslator,
        getTranslator,
        setRestClient,
        getRestClient,
        getValidator,
        getDialogPublisher,
        createErrorDialogPublisher,
        getErrorDialogPublisher,
        getBaseUrl,
        setBaseUrl,
        getApiBaseUrl,
        setApiBaseUrl,
        setUserEmail,
        getUserEmail
    };
}