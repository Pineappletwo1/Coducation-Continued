export default function Validator(translator) {
    let validableProps = [];
    let validableRules = [];

    function addRequired(validableProp) {
        validableProp.extend({
            required: {
                message: translator.translate('SharedDomain.Validation.Required.Message')
            }
        });
        validableProps.push(validableProp);
    }

    function addEmail(validableProp) {
        validableProp.extend({
            email: {
                message: translator.translate('SharedDomain.Validation.Email.Message')
            }
        });
        validableProps.push(validableProp);
    }

    function addMinimum(validableProp, minValue) {
        validableProp.extend({
            min: {
                params: minValue,
                message: translator.translate('SharedDomain.Validation.Minimun', [minValue])
            }
        });
        validableProps.push(validableProp);
    }

    function addMaximum(validableProp, maxValue) {
        validableProp.extend({
            max: {
                params: maxValue,
                message: translator.translate('SharedDomain.Validation.Maximum', [maxValue])
            }
        });
        validableProps.push(validableProp);
    }

    function addNumber(validableProp) {
        validableProp.extend({
            number: {
                message: translator.translate('SharedDomain.Validation.Numeric')
            }
        });
        validableProps.push(validableProp);
    }

    function addMinimumLength(validableProp, minLength) {
        validableProp.extend({
            minLength: {
                params: minLength,
                message: translator.translate('SharedDomain.Validation.MinLength.Message', [minLength])
            }
        });
        validableProps.push(validableProp);
    }
	
    function addMaximumLength(validableProp, maxLength) {
        validableProp.extend({
            maxLength: {
                params: maxLength,
                message: translator.translate('SharedDomain.Validation.MaxLength.Message', [maxLength])
            }
        });
        validableProps.push(validableProp);
    }
    
    function addRule(validableRule) {
        validableRules.push(validableRule);
    }

    function isValid(validableProp) {
        return validableProp.isValid();
    }

    function isAllValid() {
        return validableProps.every((prop) => prop.isValid()) && validableRules.every((rule) => rule());
    }

    return {
        addRequired,
        addEmail,
        addMinimum,
        addMaximum,
        addMinimumLength,
        addMaximumLength,
        addNumber,
        addRule,
        isValid,
        isAllValid
    };
}
