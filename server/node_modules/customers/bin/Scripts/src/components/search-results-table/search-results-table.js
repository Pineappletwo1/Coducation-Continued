import RegisterComponent from "../../componentRegister";
import template from './search-results-table-template';

RegisterComponent('search-results-table', {
    script: {
        create: (props) => {
            return SearchResultsTable({ columnsDefinition: props.columns, rows: props.rows, whenRowClick: props.whenRowClick });
        }
    },
    template: template
});

export default function SearchResultsTable({ columnsDefinition, rows, whenRowClick }) {
    const onRowClick = whenRowClick || (() => {});

    function buildColumns() {
        return _.map(columnsDefinition, (colDefinition) => buildColumn(colDefinition));
    }

    function buildColumn(colDefinition) {
        return {
            name: colDefinition.name,
            label: colDefinition.label,
            type: colDefinition.type || 'text',
            align: getCssForAlignment(colDefinition.align),
            class: getCssForHiding(colDefinition.hideWhen)
        };
    }

    function getCssForHiding(hideWhen) {
        const hideWhenDictionary = {
            'never': '',
            'extra-small': 'hidden-xs',
            'small': 'hidden-sm hidden-xs',
            'medium': 'hidden-md hidden-sm hidden-xs',
            'large': 'hidden-lg hidden-md hidden-sm hidden-xs'
        };
        return hideWhenDictionary[hideWhen];
    }

    function getCssForAlignment(align) {
        if (!align) return "text-left";
        return "text-" + align;
    }

    return {
        columns: buildColumns(),
        rows,
        onRowClick
    };
}