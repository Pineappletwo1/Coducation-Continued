import CatalogClient from "../../src/infrastructure/clients/catalogClient";

describe("Catalog client should", () => {
    describe("get models", () => {
        const restClient = {
            get: (url, callback) => {
                callback();
            }
        };
        const brandId = 1;

        it("calling to client", () => {
            spyOn(restClient, 'get');
            const client = CatalogClient(restClient, {}, {});

            client.getModels(brandId, () => { }, () => { });

            expect(restClient.get).toHaveBeenCalledWith(`brands/1/models`, jasmine.any(Function), jasmine.any(Function));
        });

        it("executing callback", () => {
            let callbackExecuted = false;
            const callback = () => {
                callbackExecuted = true;
            };
            const client = CatalogClient(restClient, {}, {});

            client.getModels(brandId, callback, () => { });

            expect(callbackExecuted).toEqual(true);
        });

        it("executing errorCallback", () => {
            const restClient = {
                get: (url, callback, errorCallback) => {
                    errorCallback();
                }
            };
            const errorPublisher = {
                publish: () => {}
            };
            const errorTitles = {
                CatalogError: 'catalogError'
            };
            spyOn(errorPublisher, 'publish');
            const errorCallback = () => {};
            const client = CatalogClient(restClient, errorPublisher, errorTitles);

            client.getModels(brandId, () => {}, errorCallback);

            expect(errorPublisher.publish).toHaveBeenCalledWith(undefined, errorTitles.CatalogError, undefined, errorCallback);
        });
    });
});