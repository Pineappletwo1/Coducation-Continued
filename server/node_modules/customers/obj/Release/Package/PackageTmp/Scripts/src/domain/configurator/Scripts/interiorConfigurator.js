export default function InteriorConfigurator(whenInteriorIsSelected) {

    const interiorOptions = ko.observableArray([]);
    const interiorSelected = ko.observable();

    interiorSelected.subscribe(() => {
        whenInteriorIsSelected(interiorSelected());
    });

    function initializeSelector(interiors) {
        interiorOptions.removeAll();
        ko.utils.arrayPushAll(interiorOptions, interiors);
        interiorSelected(undefined);
    }

    function setOptionsForSelectedColor(modelConfiguration, catalog) {
        if (!modelConfiguration.hasColor()) {
            interiorOptions(catalog.interiors);
        } else {
            interiorOptions(catalog.compatibleInteriorsWith(modelConfiguration.configuredColor().code));
        }
    }

    return {
        options: interiorOptions,
        selected: interiorSelected,
        initializeSelector,
        setOptionsForSelectedColor
    };
}