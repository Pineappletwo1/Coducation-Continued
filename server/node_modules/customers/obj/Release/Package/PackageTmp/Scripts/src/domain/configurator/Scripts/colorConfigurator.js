export default function ColorConfigurator(whenColorIsSelected) {

    const colorOptions = ko.observableArray([]);
    const colorSelected = ko.observable();

    colorSelected.subscribe(() => {
        whenColorIsSelected(colorSelected());
    });

    function initializeSelector(colors) {
        colorOptions.removeAll();
        ko.utils.arrayPushAll(colorOptions, colors);
        colorSelected(undefined);
    }
    
    function setOptionsForSelectedInterior(modelConfiguration, catalog) {
        if (!modelConfiguration.hasInterior()) {
            colorOptions(catalog.colors);
        } else {
            colorOptions(catalog.compatibleColorsWith(modelConfiguration.configuredInterior().code));
        }
    }

    return {
        options: colorOptions,
        selected: colorSelected,
        initializeSelector,
        setOptionsForSelectedInterior
    };
}