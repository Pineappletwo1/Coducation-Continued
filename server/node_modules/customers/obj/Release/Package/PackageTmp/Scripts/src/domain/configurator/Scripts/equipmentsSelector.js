export default function EquipmentsSelector() {

    let categories = ko.observableArray();
    let search = EquipmentsSearch();
    let allEquipments = [];

    function setEquipments(equipments, packages) {
        let allSelectableItems = _(packages).concat(equipments).value();
        clean(allSelectableItems);
        groupEquipmentsByCategory(allSelectableItems);
        initSearch();
    }

    function clean(equipments) {
        allEquipments = equipments;
        categories.removeAll();
    }

    function groupEquipmentsByCategory(equipments) {
        let equipmentsGroupedByCategory = _.groupBy(equipments, "category");
        _.each(equipmentsGroupedByCategory, function(equipments, category) {
            categories.push(EquipmentCategory(equipments, category));
        });
    }

    function initSearch() {
        search.setEquipments(allEquipments);
    }

    function unselectAllEquipments() {
        _.each(allEquipments, (x) => x.selected(false));
    }

    return {
        categories,
        setEquipments,
        search,
        unselectAllEquipments: unselectAllEquipments
    };
}

function EquipmentCategory(equipments, name) {
    return {
        name,
        id: _.uniqueId('category_'),
        equipments
    };
}

function EquipmentsSearch() {
    let textToSearch = ko.observable('');
    let results = ko.observableArray([]);
    let elements = [];

    function setEquipments(equipments) {
        results.removeAll();
        elements.length = 0;
        _.each(equipments, function(equipment) {
            elements.push(equipment);
        });
        search();
    }

    function search() {
        results.removeAll();
        let filteredResults = _.filter(elements, function(element) {
            return element.contains(textToSearch());
        });
        ko.utils.arrayPushAll(results, filteredResults);
    }

    return {
        results,
        textToSearch,
        search,
        setEquipments
    };
}