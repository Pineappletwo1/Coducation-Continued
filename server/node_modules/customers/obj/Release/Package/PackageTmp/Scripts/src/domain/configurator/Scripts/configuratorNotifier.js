export default function ConfiguratorNotifier(dialogPublisher, translator) {

    function notifyChangesInConfiguration(modelConfiguration, newConfiguration, actionType) {
        let message;
        if (modelConfiguration.colorHasChanged(newConfiguration) && !actionType.IsChangeColor()) {
            message = translator.translate("Configurator.NotifyChangeColor.Message");
        }

        if (modelConfiguration.interiorHasChanged(newConfiguration) && !actionType.IsChangeInterior()) {
            if (message) message += " " + translator.translate("Configurator.NotifyChangeInteriorAndColor.Message");
            else message = translator.translate("Configurator.NotifyChangeInterior.Message");
        }

        if (message) {
            dialogPublisher.warning({ title: translator.translate("SharedDomain.Warning.Text"), message: message });
        }
    }

    function notifyAutofixesConfirmation(newAutofixes, whenConfirmed) {
        let fixesAsString = _.reduce(newAutofixes, (acc, fix) => acc + "- " + translator.translate("Configurator.ApplyConfiguration.Message", [fix.addedItem, fix.removedItem]) + '<br>', "");
        fixesAsString += "<br>" + translator.translate("Configurator.OkToContinue.Message");
        dialogPublisher.confirmation({
            title: translator.translate("Configurator.ApplyConfigurationConfirmation.Message"),
            message: fixesAsString,
            callback: whenConfirmed
        });
    }

    return {
        notifyChangesInConfiguration,
        notifyAutofixesConfirmation
    };
}