import template from './labeled-input-text-template';

ko.components.register('labeled-input-text', {
    viewModel: (props) => {
        const inputSize = props.inputSize || "small";
        const isVisible = props.isVisible || true;
        const isValid = props.isValid || (() => true);
        const hideValidationMessage = props.hideValidationMessage;
        const inputSizeClass = getInputSizeCssClass();

        function getInputCssClasses() {
            const additionalClasses = {};
            additionalClasses['missing-field'] = !isValid();
            additionalClasses[inputSizeClass] = true;
            return additionalClasses;
        }

        function getInputSizeCssClass() {
            if (inputSize === "small") {
                return "width-sm";
            }
            if (inputSize === 'medium') {
                return 'width-md';
            }
            throw `The input size ${inputSize} does not exist for labeled input component`;
        }

        function showValidationMessage() {
            let validationMessageMustBeShown = true;
            if (hideValidationMessage !== undefined) 
                validationMessageMustBeShown = false;
            return !isValid() && validationMessageMustBeShown;
        }

        return {
            label: props.label,
            value: props.value,
            isValid,
            isVisible,
            getInputCssClasses,
            showValidationMessage
        };
    },
    template: template
});