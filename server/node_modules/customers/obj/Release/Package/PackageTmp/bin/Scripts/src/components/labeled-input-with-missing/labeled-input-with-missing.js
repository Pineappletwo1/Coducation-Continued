import labeledInputWithMissingTemplate from './labeled-input-with-missing-template';

ko.components.register('labeled-input-with-missing', {
    viewModel: (params) => { 
        let props = params;
        props.isVisible = props.isVisible || true;
        props.isMissing = props.isMissing || false;
        props.missingText = props.missingText || "";
        props.inputSize = props.inputSize || "medium";
        props.isMandatory = props.isMandatory || false;
        props.isValid = props.isValid || (() => true);

        function getLabelText() {
            let labelText = props.label;
            if (props.isMandatory) {
                return labelText + "*";
            }
            return labelText;
        }

        function getInputCssClasses() {
            const additionalClasses = {};
            additionalClasses['missing-field'] = props.isMissing || !props.isValid();
            additionalClasses[getInputSizeCssClass()] = true;
            return additionalClasses;
        }

        function getInputSizeCssClass() {
            if (props.inputSize === "small") {
                return "width-sm";
            } 
            if (props.inputSize === 'medium') {
                return 'width-md';            
            }
            throw `The input size ${props.inputSize} does not exist for labeled input component`;
        }

        return {
            props: props,
            getInputCssClasses,
            getLabelText
        };
    },
    template: labeledInputWithMissingTemplate
});