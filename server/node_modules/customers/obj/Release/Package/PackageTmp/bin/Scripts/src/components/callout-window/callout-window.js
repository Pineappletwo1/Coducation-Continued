import RegisterComponent from "../../componentRegister";
import template from "./callout-window-template";

RegisterComponent('callout-window', {
    script: (props) => {
        const showCallout = props.visible;
        const message = props.text;
        const htmlTemplate = props.html ? props.html.template : ko.observable();
        const htmlData = props.html ? props.html.data : ko.observable();
        const actionResult = props.actionResult;
        const calloutStyle = ko.observable();
        const iconStyle = ko.observable();
        let activeTimeout;
        let closeCallback = () => { };

        actionResult.subscribe(() => setStyle());

        setTemplate();
        setStyle();
        configTimeout(props.timeout);
        if (props.closeCallback) closeCallback = props.closeCallback;

        function close() {
            if (activeTimeout) clearTimeout(activeTimeout);
            showCallout(false);
            closeCallback();
        }

        function determineCssByResult(actionResult) {
            let stylesMap = {
                'success': { alert: "alert alert-success", icon: "icon fa fa-check" },
                'info': { alert: "alert alert-info", icon: "icon fa fa-info" },
                'warning': { alert: "alert alert-warning", icon: "icon fa fa-warning" },
                'error': { alert: "alert alert-error", icon: "icon fa fa-ban" }
            };

            return stylesMap[actionResult] || stylesMap['info'];
        }

        function configTimeout(timeout) {
            showCallout.subscribe(() => {
                if (showCallout()) {
                    if (activeTimeout) clearTimeout(activeTimeout);
                    const calloutTimeout = ko.unwrap(timeout);
                    if (calloutTimeout) {
                        activeTimeout = setTimeout(close, ko.unwrap(timeout));
                    } else {
                        activeTimeout = null;
                    }
                }
            });
        }

        function setTemplate() {
            if (!htmlTemplate()) {
                htmlTemplate("default_template");
            }
            if (htmlTemplate() == "default_template") {
                htmlData({ close, iconStyle, message });
            }
        }

        function setStyle() {
            const style = determineCssByResult(actionResult());
            calloutStyle(style.alert);
            iconStyle(style.icon);
        }

        return { showCallout, message, calloutStyle, iconStyle, close, htmlTemplate, htmlData };
    },
    template: template
});